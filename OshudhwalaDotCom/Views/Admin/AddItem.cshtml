@model OshudhwalaDotCom.Models.Item

@{
    ViewBag.Title = "AddItem";
    Layout = "~/Views/Shared/Common.cshtml";
    string message = ViewBag.Message ?? "";
    string errorMessage = ViewBag.ErrorMessage ?? "";
}
<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<h2>AddItem</h2>
<style>
    #imgDiv{
        display:none;
        max-height:500px;
        max-width:500px;
    }
    #imageUpload{
        max-height:500px;
        max-width:500px;
    }
</style>

<form method="post" id="formSubmit">
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        <h3 style="color:forestgreen">@message</h3><h3 style="color:red">@errorMessage</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.DropDownList("Category", ViewBag.CategoryList as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.DropDownList("SubCategory", new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubSubCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.DropDownList("SubSubCategory", new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubSubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                <input type="file" name="Photo" id="Photo" />
                @*@Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "", @type="file" } })*@
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="imgDiv">
            <label for="imageUpload" class="control-label col-md-3"></label>
            <div>
                <img id="imageUpload" src="" alt="Image is not available" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDanger, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.RadioButtonFor(model => model.IsDanger, "1")Yes
                @Html.RadioButtonFor(model => model.IsDanger, "0") No
                @Html.ValidationMessageFor(model => model.IsDanger, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-sm-3">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>
<script>
    $("#Category").change(function () {
        $("#SubCategory").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("SubCategoryList")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ id: $('#Category').val() }),
            async:false,
            success: function (response) {
                $.each(response, function (key, value) {
                    $("#SubCategory").append('<option value="' + value.Value + '">' + value.Text + '</option>')
                })
                return false;
            },
            error: function (err) {
                console.log(err);
            }
        })
    });
    $("#SubCategory").change(function () {
        $("#SubSubCategory").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("SubSubCategoryList")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ id: $('#SubCategory').val() }),
            async: false,
            success: function (response) {
                $.each(response, function (key, value) {
                    $("#SubSubCategory").append('<option value="' + value.Value + '">' + value.Text + '</option>')
                })
                return false;
            },
            error: function (err) {
                console.log(err);
            }
        })
    });
    function readURL(input) {
        var reader = new FileReader();
        reader.onload = function (e) {
            $("#imgDiv").show();
            $('#imageUpload').attr('src', e.target.result);
        }
        reader.readAsDataURL(input.files[0]);
    }
    $('#Photo').change(function () {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only formats are allowed : " + fileExtension.join(', '));
            $(this).val('');
            $("#imageUpload").attr('src', '');

        } else {
            readURL(this);
        }
    });
    $("#formSubmit").on('submit', function () {
                var that = $(this),
                url = that.attr('action'),
                method = that.attr('method'),
                data = {};

                that.find('[name]').each(function (index, value) {
                    var that = $(this),
                        name = that.attr('name'),
                        value = that.val();
                    data[name] = value;
                });
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddItem")',
                    dataType: 'json',
                    data: JSON.stringify({ item: data }),
                    success: function (response) {
                        alert(response.success);
                    }
                })
                return false;
            })
</script>